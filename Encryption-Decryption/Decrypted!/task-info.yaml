type: edu
custom_name: stage3
files:
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |
    package encryptdecrypt;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.SimpleTestCase;

    import java.util.List;

    public class EncryptDecryptTest extends StageTest {
        public EncryptDecryptTest() throws Exception {
            super(Main.class);
        }

        @Override
        public List<SimpleTestCase> generate() {
            return List.of(
                new SimpleTestCase(
                    "enc\n" +
                        "Welcome to hyperskill!\n" +
                        "5",
                    "\\jqhtrj%yt%m~ujwxpnqq&"),
                new SimpleTestCase(
                    "enc\n" +
                        "Hello\n" +
                        "0",
                    "Hello"),
                new SimpleTestCase(
                    "enc\n" +
                        "012345678\n" +
                        "1",
                    "123456789"),
                new SimpleTestCase(
                    "dec\n" +
                        "\\jqhtrj%yt%m~ujwxpnqq&\n" +
                        "5",
                    "Welcome to hyperskill!"),
                new SimpleTestCase(
                    "dec\n" +
                        "Hello\n" +
                        "0",
                    "Hello"),
                new SimpleTestCase(
                    "dec\n" +
                        "222233334444\n" +
                        "1",
                    "111122223333")
            );
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Decoder.java
  visible: true
  text: |
    package encryptdecrypt;

    public class Decoder {

        public char cipherOneSimbol(char simbol) {
            if (simbol >= 97 && simbol <= 122) {
                return (char) (122 - simbol % 97);
            } else {
                return simbol;
            }
        }

        public String cipherWholeString(String text) {
            char[] array = text.toCharArray();
            for (int i = 0; i < array.length; i ++) {
                array[i] = cipherOneSimbol(array[i]);
            }
            return new String(array);
        }

    }
  learner_created: true
- name: src/encryptdecrypt/Encoder.java
  visible: true
  text: |
    package encryptdecrypt;

    public class Encoder {

        public char cipherOneSimbol(char simbol, int key) {
            if (simbol >= 97 && simbol <= 122) {
                if ((char) (simbol + key) > 122) {
                    return (char) ((simbol + key)  - 26);
                } else {
                    return (char) (simbol + key);
                }

            } else {
                return simbol;
            }
        }

        public String cipherWholeString(String text, int key) {
            char[] array = text.toCharArray();
            for (int i = 0; i < array.length; i ++) {
                array[i] = cipherOneSimbol(array[i], key);
            }
            return new String(array);
        }

    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/46/stages/247/implement
status: Solved
feedback:
  message: Congratulations! Continue on <a href="https://hyperskill.org/projects/46/stages/247/implement">JetBrains
    Academy</a>
  time: Tue, 22 Sep 2020 08:53:53 UTC
record: 3
